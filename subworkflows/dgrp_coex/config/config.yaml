# --------------------------- housekeeping -------------------------------------
PEP: config/pep.yaml
RUN_TYPE: test # full, test

FLYBASE_RELEASE: FB2021_04
GENOME_VERSION: r6.41

# --------------------------- job options --------------------------------------
FASTERQDUMP_MEM: 24000

# Salmon quant (standard quantification approach)
SALMON_VANILLA_BOOTSTRAPS: 20
SALMON_VANILLA_LIBTYPE: SR # standard for dUTP, which the DGRP data is. Confirmed by aligning SAMN09738660 - reads map to (-) strand
SALMON_VANILLA_SEQBIAS: TRUE
SALMON_VANILLA_GCBIAS: TRUE
SALMON_VANILLA_POSBIAS: TRUE
SALMON_VANILLA_USE_AUXTARGETS: FALSE
SALMON_VANILLA_USE_DECOYS: TRUE
SALMON_VANILLA_SOFTCLIP: TRUE

# Tximport
# these values will be "counts" for all downstream approaches. This is
# relevant as the input to DESeq2 but also because some normalizations are run
# on these directly. So, that means those normalizations are run on totally raw
# counts if the params below == "no"
SALMON_VANILLA_TXIMPORT_COUNTSFROMABUNDANCE: scaledTPM # no, scaledTPM, lengthScaledTPM
SALMON_VANILLA_TXIMPORT_COUNTSFROMABUNDANCE_TXOUT: dtuScaledTPM # no, scaledTPM, lengthScaledTPM, dtuScaledTPM
SALMON_VANILLA_TXIMPORT_COUNTSFROMABUNDANCE_TERMINUS: scaledTPM # no, scaledTPM, lengthScaledTPM

# export of expression to a tab sep matrix. Multiple export units/norms/transforms
# are available. Also possible is normalization to estimated TE copy number,
# which necessarily is performed prior to vst, fpkm, etc, quantile norm, etc.
# 'INCL copy estimation in export' only controls whether this information is generated.
# there will always be two exports for each export type, but if INCL_COPY_ESTIMATION_IN_EXPORT is
# TRUE, the -""
EXPORT_UNITS: ["vst","normcts","fpkm","edaseq_uq","ppc_qn","edaseq_qn"] # ["vst","counts","normcts","fpkm","abundance","cpm","uq","qn"]
INCL_COPY_ESTIMATION_IN_EXPORT: TRUE

# DESeq2 on salmon
DESEQ2_LRT_FORMULA: ~ Strain + sex # not used right now
DESEQ2_LRT_REDUCED_FORMULA: ~ 1 # not used right now
DESEQ2_FITTYPE: local

# --------------------basic linear model options -------------------------------
# each entry in "LM_MODELS_TO_FIT" will be a named directory with the prescribed
# linear model results
# ------------------------------------------------------------------------------

# number of chunks split genes into to process model fitting. can be up to 9999
LM_CHUNKS: 1000

# an expression that returns a logical vector for selecting rows of matrix x
LM_FEATURE_FILT: "(((!str_detect(rownames(x),'FBgn')) & rowSums(x > 1) > 10) | (rowSums(x > 10) > 100)) & rowSums(x == 0) < 0.3*ncol(x)"

# set of model groups to fit
LM_MODELS_TO_FIT:
  male_vst_control_copy_and_overlap: # the name for the lm fitting run. Will be a directory in the linear_modeling output dir
    LM_FIT_FOR_PIPELINE: vanilla_salmon_tes_transcripts # currently the only option
    LM_FIT_FOR_FEATURE_LEVEL: "gene" # gene or transcript
    LM_FIT_FOR_UNITS: vst # one of EXPORT_UNITS above
    LM_CNNORM: per_feature # per_est_copy (applied to TEs only) or per_feature
    LM_FORMULA: y ~ x + wolbachia + overlap + scaled.copies.x + scaled.copies.y
    LM_SEX: male # male, female, or both
    LM_VARIABLE_TRANSFORM: x # for no transform just put 'x', or for countlike data something like log2(x+1)
    LM_VARIABLE_SCALE: TRUE # scale genes to have mean 0 and sd 1 - mostly important for regressing out variables
    LM_CORRECT_N_PCS: 4 # number of pcs to correct for with WGCNA
  female_vst_control_copy_and_overlap: # the name for the lm fitting run. Will be a directory in the linear_modeling output dir
    LM_FIT_FOR_PIPELINE: vanilla_salmon_tes_transcripts # currently the only option
    LM_FIT_FOR_FEATURE_LEVEL: "gene" # gene or transcript
    LM_FIT_FOR_UNITS: vst # one of EXPORT_UNITS above
    LM_CNNORM: per_feature # per_est_copy (applied to TEs only) or per_feature
    LM_FORMULA: y ~ x + wolbachia + overlap + scaled.copies.x + scaled.copies.y
    LM_SEX: female # male, female, or both
    LM_VARIABLE_TRANSFORM: x # for no transform just put 'x', or for countlike data something like log2(x+1)
    LM_VARIABLE_SCALE: TRUE # scale genes to have mean 0 and sd 1 - mostly important for regressing out variables
    LM_CORRECT_N_PCS: 4 # number of pcs to correct for with WGCNA
