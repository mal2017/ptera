import sys
import peppy
import glob

configfile: "config/config.yaml"
pepfile: config.get("PEP")

SAMPLES = [x.sample_name for x in pep.samples]
SAMPLES = SAMPLES if config.get("RUN_TYPE") == "FULL" else SAMPLES[:4]

SUBSAMPLE_TABLE = pep.subsample_table

rule all:
    input:
        expand("results/scatter/{a}/{b}/",a=["vanilla_salmon_tes_transcripts"], b=["raw","normcts","fpkm","vst","abundance","cpm","rlog"])
        #expand("results/quantification/vanilla_salmon_tes_transcripts/{x}.tsv.gz",x=["raw","normcts","fpkm","abundance","cpm"])
        #expand("results/quantification/vanilla_salmon_tes_transcripts/quant/{s}/quant.sf",s=SAMPLES),
        #"results/quantification/vanilla_salmon_tes_transcripts/terminus.done",
        #"results/quantification/vanilla_salmon_tes_transcripts/terminus.tx2group.raw.csv",
        #expand("results/reads/fastp/{s}_r1.trimmed.fq.gz",s="DGRP_Line_100_Female_SAMN09738660")
        #expand("results/reads/dump/{s}/{e}/{r}/",s="DGRP_Line_100_Female_SAMN09738660",e=["SRX4483514"],r=['SRR7619150', 'SRR7619149'])

include: "rules/download.smk"
include: "rules/trim.smk"
include: "rules/utils.smk"
include: "rules/vanilla_salmon.smk"
include: "rules/metadata.smk"
include: "rules/scatter.smk"
include: "rules/linear_modeling.smk"
